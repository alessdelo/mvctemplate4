const theModel = require('../models/kitty')
const debugs = require('../helpers/debugs.js')
const randoms = require('../helpers/randoms.js')

var importVars = require('../vars.js')
var theIndex = importVars.index

exports.createp = function (req, res) {

    // res.send(req.body);
    // res.send(req.body.name + " - " + req.body.age);

    
    let form1 = new theModel(
        {
            name: req.body.name,
            age: req.body.age
            
        }
    )

    form1.save(function (err, result) {
        if (err) {
            return next(err)
        }
       // res.send(result.id);
    

        /*
        var theParams = {
                 "name": req.params.name,
                 "age": req.params.age
                 }
       */

       
       var theParams = {
                 "id": result.id,
                 "name": result.name,
                 "age": result.age
                 }
       

       
        var text =  {
                 title: "Form 1 (Created)", 
                 content:"../contents/form1created.ejs",
                 descr: "empty.....",
                 nav: theIndex.nav,
                 header: theIndex.header,
                 footer: theIndex.footer,
                 params: [theParams]
                }
        res.render(theIndex.index,text)
      
    }) // end save

   

} // end create

// ----------------------------------------------------------------------



exports.create = function (req, res) {


    let form1 = new theModel(
        {
            name: req.params.name,
            age: req.params.age
            
        }
    )

    form1.save(function (err) {
        if (err) {
            return next(err)
        }
        
        var theParams = {
                 "name": req.params.name,
                 "age": req.params.age
                 };


        var text =  {
                 title: "Form 1 (Create)", 
                 content:"../contents/form1create.ejs",
                 descr: "empty.....",
                 nav: theIndex.nav,
                 header: theIndex.header,
                 footer: theIndex.footer,
                 params: [theParams]
                }
        res.render(theIndex.index,text)
    }) // end save

} // end create

// ----------------------------------------------------------------------

// READ
exports.read = function (req, res) {
    theModel.findById(req.params.id, function (err, result) {
        if (err) return next(err)
        
                // res.send(result)
                
                var theParams = {result}
       
                var text =  {
                         title: "Show record", 
                         content:"../contents/form1show.ejs",
                         descr: "empty.....",
                         nav: theIndex.nav,
                         header: theIndex.header,
                         footer: theIndex.footer,
                         params: [theParams]
                        }
                
                res.render(theIndex.index,text)
    })
}

// ----------------------------------------------------------------------

// EDIT
// the same as read but changes the link

exports.read = function (req, res) {
    theModel.findById(req.params.id, function (err, result) {
        if (err) return next(err)
        
                // res.send(result)
                
                var theParams = {result}
       
                var text =  {
                         title: "Edit record", 
                         content:"../contents/form1edit.ejs",
                         descr: "empty.....",
                         nav: theIndex.nav,
                         header: theIndex.header,
                         footer: theIndex.footer,
                         params: [theParams]
                        }
                
                res.render(theIndex.index,text)
    })
}

// ----------------------------------------------------------------------

// UPDATE (VIA GET)
exports.update = function (req, res) {
    theModel.findByIdAndUpdate(
                            {
                                "_id": req.params.id
                             },
        
                            {
                                $set: { "name": req.params.name, "age": req.params.age}}, function (err, result) {
                                            if (err) return next(err)
                                                    res.send('Record udpated.' + ' _id: ' + req.params.id + 
                                                                                ' name: ' + req.params.name + 
                                                                                ' age: ' + req.params.age
                                                                                )
                            }
                           )
} // end update

// ----------------------------------------------------------------------

// UPDATE (VIA POST)
exports.updatep, export.updateg = function (req, res) {
    theModel.findByIdAndUpdate(
                            {
                                "_id": req.body.id
                             },
        
                            {
                                $set: { "name": req.body.name, "age": req.body.age}}, function (err, result) {
                                            if (err) return next(new Error('There was an error'))
                                                    res.send('Record udpated (result): ' + ' _id: ' + result.id + 
                                                                                ' name: ' + result.name + 
                                                                                ' age: ' + result.age
                                                                                )
                            }
                           )
} // end update

// ----------------------------------------------------------------------


// DELETE
exports.delete = function (req, res) {
    theModel.findByIdAndRemove(req.params.id, { useFindAndModify: false }, function (err, result) {
        if (err) return next(err)
        // res.send('item id: ' + req.params.id + ' Deleted successfully!')
        res.send( debugs.textFromObject(result) )
    })
}

// ----------------------------------------------------------------------

// EXSTRACT LAST N. INSERTED RECORDS 
exports.lastitems = function (req, res) {

    theModel.find({}, { useFindAndModify: false }, function (err, result) {
    
         if (err) res.send(debugs.textFromObject(err)) // return next(err)
   

                
                var theParams = {result}
       
                var text =  {
                         title: "Records Table", 
                         content:"../contents/lastitems.ejs",
                         descr: "empty.....",
                         nav: theIndex.nav,
                         header: theIndex.header,
                         footer: theIndex.footer,
                         params: [theParams]
                        }
                
                res.render(theIndex.index,text)
                
                // res.send("the num: " + req.params.num + "<br> result: " + debugs.textFromObject(result))

            } ).sort({$natural:1}).limit(parseInt(req.params.num))
    
 } // end lastitems
